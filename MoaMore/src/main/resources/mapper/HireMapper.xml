<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yedam.moa.hire.mapper.HireMapper">
	<!-- 전체조회 -->
	<select id="serchHire" resultType="HireVO">
	    SELECT R.TTL,
		       K.SKILL,
		       C.CO_NM,
		       get_common(WKSITE) AS WKSITE,
               R.EXPR_DT,
               R.CO_IMG,
               R.RECRUIT_NO,
              	 (SELECT S.RECRUIT_NO FROM RECRUIT_SCRAP S WHERE R.RECRUIT_NO = S.RECRUIT_NO AND ID = #{id}) AS scrapYn
		FROM RECRUIT_ANUN R
		JOIN CO C
		ON R.ID = C.ID
		JOIN (SELECT recruit_no , LISTAGG(get_common(SKILL), ',') WITHIN GROUP (ORDER BY SKILL_NO) as SKILL
              FROM RECRUIT_SKILL
              GROUP BY recruit_no) K
		ON R.RECRUIT_NO = K.RECRUIT_NO
		
		WHERE 1=1
			<if test="scrapYn != null and scrapYn != ''">
				AND EXISTS (SELECT S.RECRUIT_NO FROM RECRUIT_SCRAP S WHERE R.RECRUIT_NO = S.RECRUIT_NO AND ID = #{id})
       		</if>
			
			<if test="job != null and job != ''">
				AND R.JOB = #{job}
       		</if>
       		
       		<if test="wksite != null and wksite != ''">
       			AND R.WKSITE = #{wksite}
       		</if>
       		
       		<if test="carr != null and carr != ''">
				AND R.CARR = #{carr}       		
       		</if>
       		
       		<if test="skill != null and skill != ''">
       			AND K.SKILL LIKE '%' || get_common(#{skill}) || '%'
       		</if>
		
        GROUP BY R.TTL,
		       K.SKILL,
		       C.CO_NM,
		       WKSITE,
               R.EXPR_DT,
               R.CO_IMG,
               R.RECRUIT_NO
	</select>
	<!-- 스크랩 조회 -->
	<select id="scrapHire" resultType="HireVO">
		SELECT R.TTL,
		       K.SKILL,
		       C.CO_NM,
		       get_common(WKSITE) AS WKSITE,
		       R.EXPR_DT,
		       R.CO_IMG,
		       S.RECRUIT_NO,
		       <if test="id != null and id != ''">
              	 (SELECT S.RECRUIT_NO FROM RECRUIT_SCRAP S WHERE R.RECRUIT_NO = S.RECRUIT_NO AND ID = #{id}) AS scrapYn
               </if>
		FROM RECRUIT_ANUN R
		JOIN CO C
		ON R.ID = C.ID
		JOIN RECRUIT_SCRAP S
		ON R.RECRUIT_NO = S.RECRUIT_NO
        JOIN MEMBER M
        ON S.ID = M.ID
        JOIN (SELECT recruit_no , LISTAGG(get_common(SKILL), ',') WITHIN GROUP (ORDER BY SKILL_NO) as SKILL
              FROM RECRUIT_SKILL
              GROUP BY recruit_no) K
		ON R.RECRUIT_NO = K.RECRUIT_NO
		WHERE S.RECRUIT_NO IS NOT NULL
        AND M.ID = #{id}
	</select>
	<!-- 상세조회 -->
	<select id="searchInfo" resultType="HireVO">
		SELECT R.TTL,
		       K.SKILL,
		       C.CO_NM,
		       get_common(WKSITE) AS WKSITE,
               R.EXPR_DT,
               R.CO_IMG,
               R.RECRUIT_NO,
              	 (SELECT S.RECRUIT_NO FROM RECRUIT_SCRAP S WHERE R.RECRUIT_NO = S.RECRUIT_NO AND ID = #{id}) AS scrapYn,
               get_common(MA_BUSS)AS MA_BUSS,
               R.QUAL_COND,
               R.PREF_COND,
               R.WELF,
               get_common(CARR)AS CARR,
               get_common(SHCR)AS SHCR,
               R.CO_INTRO,
               R.RECRUIT_NO,
               C.ID AS ID_CO
		FROM RECRUIT_ANUN R
		JOIN CO C
		ON R.ID = C.ID
		JOIN (SELECT recruit_no , LISTAGG(get_common(SKILL), ',') WITHIN GROUP (ORDER BY SKILL_NO) as SKILL
              FROM RECRUIT_SKILL
              GROUP BY recruit_no) K
		ON R.RECRUIT_NO = K.RECRUIT_NO
		WHERE R.RECRUIT_NO = #{recruitNo}
		<if test="scrapYn != null and scrapYn != ''">
			AND EXISTS (SELECT S.RECRUIT_NO FROM RECRUIT_SCRAP S WHERE R.RECRUIT_NO = S.RECRUIT_NO AND ID = #{id})
       	</if>
	</select>
	<!-- 이력서 조회 -->
	<select id="resumeList" resultType="HireVO">
		SELECT RESUME_NO,
		       ID,
		       TTL,
		       REG_DT
		FROM RESUME
		WHERE ID = #{id}
	</select>
	<!-- 구인공고 지원 -->
	<insert id="resumeInsert" parameterType="HireVO">
		INSERT INTO RECRUIT_ANUM_ST (RECRUIT_NO, RESUME_NO, ID, APLY_ST, APLY_DT, ST, WIN)
       	VALUES (#{recruitNo}, #{resumeNo}, #{id}, 'b1',  TO_CHAR(sysdate,'yyyy-MM-dd'), '0', 'T2')
	</insert>
	<!-- 관심 기업 등록 -->
	<insert id="followInsert" parameterType="HireVO">
		INSERT INTO FOLLOWING(ID_MEM, ID_CO)
		VALUES (#{id}, #{idCo})
	</insert>
	<!-- 관심 기업 취소 -->
	<delete id="followDelete" parameterType="HireVO">
		DELETE FROM FOLLOWING WHERE ID_CO = #{idCo} AND ID_MEM = #{id}
	</delete>
	<!-- 공고 스크랩 등록 -->
	<insert id="recruitScrapInsert" parameterType="HireVO">
		INSERT INTO RECRUIT_SCRAP (RECRUIT_NO, ID)
        VALUES(#{recruitNo}, #{id})
	</insert>
	
	<!-- 공고 스크랩 삭제 -->
	<delete id="recruitScrapDelete" parameterType="HireVO">
		DELETE FROM RECRUIT_SCRAP WHERE RECRUIT_NO = #{recruitNo} AND ID = #{id}
	</delete>
	
	<!-- 공고등록 페이지 회사이름 조회 -->
	<select id="recruitInsertSelect" resultType="HireVO">
		SELECT CO_NM FROM CO WHERE ID = #{id}
	</select>
</mapper>